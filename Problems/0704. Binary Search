                    APPROACH --> 1
-------------------------------------------------------------------

class Solution {
    public int search(int[] nums, int target) {
        
        // Approach -> 1

        int len = nums.length;
        int mid = len / 2;

        for(int i=0; i<=mid; i++) {
            if(nums[i] == target)
                return i;
            else if(nums[len - i - 1] == target)
                return len-i-1;
        }

        return -1;
    }
}


--------------------------------------------------------------------

                    APPROACH --> 2

--------------------------------------------------------------------

class Solution {
    public int search(int[] nums, int target) {
        
        // Approach -> 2

        int low = 0;
        int high = nums.length - 1;

        while(low <= high) {
            int mid = (low + high) / 2;

            if(nums[mid] == target)
                return mid;
            
            else if(nums[mid] < target)
                low = mid+1;

            else if(nums[mid] > target)
                high = mid-1;
        }

        return -1;
    }
}
